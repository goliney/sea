{"version":3,"sources":["scripts/index.js"],"names":["loader","document","body","querySelector","canvas","window","addEventListener","classList","add","remove","layer_list","image","x_index","y_index","position","x","y","base_offset","touch_multiplier","motion_multiplier","max_offset","moving","pointer_initial","pointer","motion_initial","motion","drawCanvas","TWEEN","update","rotate_x","rotate_y","style","transform","forEach","layer","index","getOffset","requestAnimationFrame","touch_offset_x","touch_offset_y","motion_offset_x","motion_offset_y","offset","console","log","pointerStart","event","type","touches","clientX","clientY","pointerMove","preventDefault","current_x","current_y","endGesture","removeAll","Tween","to","easing","Easing","Back","Out","start","enableMotion","DeviceOrientationEvent","requestPermission","beta","gamma","orientation","Math","abs"],"mappings":"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","file":"scripts.97903a79.js","sourceRoot":"../src","sourcesContent":["const loader = document.body.querySelector(\".loader\");\nconst canvas = document.body.querySelector(\".canvas\");\n\nwindow.addEventListener(\n  \"load\",\n  () => {\n    loader.classList.add(\"hidden\");\n    canvas.classList.remove(\"hidden\");\n  },\n  false\n);\n\nconst layer_list = [\n  {\n    image: document.body.querySelector(\".background\"),\n    x_index: 0,\n    y_index: 0,\n    position: { x: 0, y: 0 },\n    base_offset: { x: 0, y: 0 }\n  },\n  {\n    image: document.body.querySelector(\".seagull-1\"),\n    x_index: -0.4,\n    y_index: -0.2,\n    position: { x: 0, y: 0 },\n    base_offset: { x: 0, y: 0 }\n  },\n  {\n    image: document.body.querySelector(\".seagull-2\"),\n    x_index: -0.4,\n    y_index: -0.15,\n    position: { x: 0, y: 0 },\n    base_offset: { x: 0, y: 0 }\n  },\n  {\n    image: document.body.querySelector(\".seagull-3\"),\n    x_index: -0.4,\n    y_index: -0.15,\n    position: { x: 0, y: 0 },\n    base_offset: { x: 0, y: 0 }\n  },\n  {\n    image: document.body.querySelector(\".seagull-4\"),\n    x_index: -0.3,\n    y_index: -0.1,\n    position: { x: 0, y: 0 },\n    base_offset: { x: 0, y: 0 }\n  },\n  {\n    image: document.body.querySelector(\".seagull-5\"),\n    x_index: -0.3,\n    y_index: -0.1,\n    position: { x: 0, y: 0 },\n    base_offset: { x: 0, y: 0 }\n  },\n  {\n    image: document.body.querySelector(\".guy\"),\n    x_index: -0.5,\n    y_index: -0.25,\n    position: { x: 0, y: 0 },\n    base_offset: { x: 0, y: 20 }\n  }\n];\n\nconst touch_multiplier = 0.3;\nconst motion_multiplier = 1.5;\n\n// This is optional, but prevents things from moving too far (because these are 2d images it can look broken)\nconst max_offset = 23;\n\n// Initialize variables for touch and mouse-based parallax\n\n// This is a variable we're using to only move things when you're touching the screen, or holding the mouse button down.\nlet moving = false;\n\n// Initialize touch and mouse position\nconst pointer_initial = {\n  x: 0,\n  y: 0\n};\nconst pointer = {\n  x: 0,\n  y: 0\n};\n\n// Initialize variables for motion-based parallax\nconst motion_initial = {\n  x: null,\n  y: null\n};\nconst motion = {\n  x: 0,\n  y: 0\n};\n\nrequestAnimationFrame(drawCanvas);\n\n// Draw layers in Canvas\nfunction drawCanvas() {\n  // This is needed for the animation to snap back to center when you release mouse or touch\n  TWEEN.update();\n\n  // Calculate how much the canvas should be rotated\n  var rotate_x = pointer.y * -0.15 + motion.y * -1.2;\n  var rotate_y = pointer.x * 0.15 + motion.x * 1.2;\n\n  // Actually rotate the canvas\n  canvas.style.transform =\n    \"rotateX(\" + rotate_x + \"deg) rotateY(\" + rotate_y + \"deg)\";\n\n  // // Loop through each layer in the list and draw it to the canvas\n  layer_list.forEach(function(layer, index) {\n    // Calculate what the position of the layer should be (getOffset function is below)\n    layer.position = getOffset(layer);\n\n    // Draw the layer into the canvas context\n    layer.image.style.transform = `translateX(${layer.position.x}px) translateY(${layer.position.y}px)`;\n  });\n\n  // Loop this function! requestAnimationFrame is a special built in function that can draw to the canvas at 60 frames per second\n  // NOTE: do not call drawCanvas() without using requestAnimationFrame hereâ€”things will crash!\n  requestAnimationFrame(drawCanvas);\n}\n\n// Function to calculate layer offset\nfunction getOffset(layer) {\n  // Calculate the amount you want the layers to move based on touch or mouse input.\n  // You can play with the touch_multiplier variable here. Depending on the size of your canvas you may want to turn it up or down.\n  var touch_offset_x = pointer.x * layer.x_index * touch_multiplier;\n  var touch_offset_y = pointer.y * layer.y_index * touch_multiplier;\n\n  // Calculate the amount you want the layers to move based on the gyroscope\n  // You can play with the motion_multiplier variable here. Depending on the size of your canvas you may want to turn it up or down.\n\n  var motion_offset_x = motion.x * layer.x_index * motion_multiplier;\n  var motion_offset_y = motion.y * layer.y_index * motion_multiplier;\n\n  // Calculate the total offset for both X and Y\n  // Total offset is a combination of touch and motion\n  var offset = {\n    x: layer.base_offset.x + touch_offset_x + motion_offset_x,\n    y: layer.base_offset.y + touch_offset_y + motion_offset_y\n  };\n\n  console.log(offset.x);\n\n  // Return the calculated offset to whatever requested it.\n  return offset;\n}\n\n//// TOUCH AND MOUSE CONTROLS ////\n\n// This one listens for when you start touching the canvas element\nwindow.addEventListener(\"touchstart\", pointerStart);\n// This one listens for when you start clicking on the canvas (when you press the mouse button down)\nwindow.addEventListener(\"mousedown\", pointerStart);\n\n// Runs when touch or mouse click starts\nfunction pointerStart(event) {\n  // Ok, you touched the screen or clicked, now things can move until you stop doing that\n  moving = true;\n  // Check if this is a touch event\n  if (event.type === \"touchstart\") {\n    // set initial touch position to the coordinates where you first touched the screen\n    pointer_initial.x = event.touches[0].clientX;\n    pointer_initial.y = event.touches[0].clientY;\n    // Check if this is a mouse click event\n  } else if (event.type === \"mousedown\") {\n    // set initial mouse position to the coordinates where you first clicked\n    pointer_initial.x = event.clientX;\n    pointer_initial.y = event.clientY;\n  }\n}\n\n// This runs whenever your finger moves anywhere in the browser window\nwindow.addEventListener(\"mousemove\", pointerMove);\n// This runs whenever your mouse moves anywhere in the browser window\nwindow.addEventListener(\"touchmove\", pointerMove);\n\n// Runs when touch or mouse is moved\nfunction pointerMove(event) {\n  // This is important to prevent scrolling the page instead of moving layers around\n  event.preventDefault();\n  // Only run this if touch or mouse click has started\n  if (moving === true) {\n    var current_x = 0;\n    var current_y = 0;\n    // Check if this is a touch event\n    if (event.type === \"touchmove\") {\n      // Current position of touch\n      current_x = event.touches[0].clientX;\n      current_y = event.touches[0].clientY;\n      // Check if this is a mouse event\n    } else if (event.type === \"mousemove\") {\n      // Current position of mouse cursor\n      current_x = event.clientX;\n      current_y = event.clientY;\n    }\n    // Set pointer position to the difference between current position and initial position\n    pointer.x = current_x - pointer_initial.x;\n    pointer.y = current_y - pointer_initial.y;\n  }\n}\n\n// Listen for when you stop touching the screen\nwindow.addEventListener(\"touchend\", function(event) {\n  // Run the endGesture function (below)\n  endGesture();\n});\n// Listen for when you release the mouse button anywhere on the screen\nwindow.addEventListener(\"mouseup\", function(event) {\n  // Run the endGesture function (below)\n  endGesture();\n});\n\nfunction endGesture() {\n  // You aren't touching or clicking anymore, so set this back to false\n  moving = false;\n\n  // This removes any in progress tweens\n  TWEEN.removeAll();\n  // This starts the animation to reset the position of all layers when you stop moving them\n  var pointer_tween = new TWEEN.Tween(pointer)\n    .to({ x: 0, y: 0 }, 300)\n    .easing(TWEEN.Easing.Back.Out)\n    .start();\n}\n\n//// MOTION CONTROLS ////\n\n// This is where we listen to the gyroscope position\nwindow.addEventListener(\"deviceorientation\", function(event) {\n  // If this is the first run through here, set the initial position of the gyroscope\n  if (!motion_initial.x && !motion_initial.y) {\n    motion_initial.x = event.beta;\n    motion_initial.y = event.gamma;\n  }\n\n  // Depending on what orientation the device is in, you need to adjust what each gyroscope axis means\n  // This can be a bit tricky\n  if (window.orientation === 0) {\n    // The device is right-side up in portrait orientation\n    motion.x = event.gamma - motion_initial.y;\n    motion.y = event.beta - motion_initial.x;\n  } else if (window.orientation === 90) {\n    // The device is in landscape laying on its left side\n    motion.x = event.beta - motion_initial.x;\n    motion.y = -event.gamma + motion_initial.y;\n  } else if (window.orientation === -90) {\n    // The device is in landscape laying on its right side\n    motion.x = -event.beta + motion_initial.x;\n    motion.y = event.gamma - motion_initial.y;\n  } else {\n    // The device is upside-down in portrait orientation\n    motion.x = -event.gamma + motion_initial.y;\n    motion.y = -event.beta + motion_initial.x;\n  }\n\n  // Check if magnitude of motion offset along X axis is greater than your max setting\n  if (Math.abs(motion.x) > max_offset) {\n    // Check whether offset is positive or negative, and make sure to keep it that way\n    if (motion.x < 0) {\n      motion.x = -max_offset;\n    } else {\n      motion.x = max_offset;\n    }\n  }\n  // Check if magnitude of motion offset along Y axis is greater than your max setting\n  if (Math.abs(motion.y) > max_offset) {\n    // Check whether offset is positive or negative, and make sure to keep it that way\n    if (motion.y < 0) {\n      motion.y = -max_offset;\n    } else {\n      motion.y = max_offset;\n    }\n  }\n});\n\n// Reset the position of motion controls when device changes between portrait and landscape, etc.\nwindow.addEventListener(\"orientationchange\", function(event) {\n  motion_initial.x = 0;\n  motion_initial.y = 0;\n});\n\nwindow.addEventListener(\"touchend\", function() {\n  enableMotion();\n});\n\nfunction enableMotion() {\n  if (\n    window.DeviceOrientationEvent &&\n    DeviceOrientationEvent.requestPermission\n  ) {\n    DeviceOrientationEvent.requestPermission();\n  }\n}\n"]}